What happens when you initialize a repository? Why do you need to do it?

An initial empty .git folder is created	to house our commits; it is empty, as we haven't actually made any commits yet!  Without this initialization, git doesn't know where to store our commit history, or what files we'll be relating the repository to.

How is the staging area different from the working directory and the repository? What value do you think it offers?

The staging area acts as a place to ready the files to be added to a commit.  It's akin to the gate area in an airport; only those people who will be boarding are allowed/need to be there, so they can board the plane when needed.  

How can you use the staging area to make sure you have one commit per logical change?

By using 'git diff --staged' to compare against the current commit; this tells you what changes you have against the most recent updates, and thus whether these are logical changes or not.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

Adding or testing a new feature, or multiple methods of implementing said feature.  It allows you to retain a working copy while still testing the code, and easily reverting back to the working code.

How do the diagrams help you visualize the branch structure?

They allow a better understanding of the history of the branch, what code is and is not included, and an idea of the underlying structure to prepare for merges.